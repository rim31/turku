{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { readRemoteFile } from 'react-papaparse'; // import { csv } from 'd3';\n// useEffect(() => {\n//   const row: string = \"NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS\"\n//   const url: any = '/alkoholilupa_toimipaikkatiedot_34.csv';\n//   csv(url).then((data: any) => {\n//     console.log(\"DATA CSV\", (data));\n//     console.log(\" CSV\", data.columns);\n//     console.log(\" data\", data[0]);\n//     setData(data)\n//   });\n// }, [])\n// NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS: \"Aalto-sali;V�in�nkatu 7;40100;Jyv�skyl�;Jyv�skyl�;01.05.2018;Ennakkoon hyv�ksytty anniskelualue;0174708-5\"\n\nexport default function TableCsv() {\n  const [data, setData] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    readRemoteFile('/alkoholilupa_toimipaikkatiedot_34.csv', {\n      complete: results => {\n        console.log('Results:', results);\n        setData(results);\n\n        if (results) {\n          setHeader(results.data[0]);\n          setRows(results.data.shif);\n        }\n      }\n    }); // readRemoteFile('http://example.com/big.csv', {\n    //   step: (row) => {\n    //     console.log('Row:', row.data)\n    //   },\n    //   complete: () => {\n    //     console.log('All done!')\n    //   }\n    // })\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table tablesorter \",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, data.data && data.data[0].map((name, ii) => /*#__PURE__*/React.createElement(\"th\", {\n    key: ii,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, data.data && data.data.map((numList, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    className: i === 0 ? \"font-weight-bold\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, numList.map((num, j) => /*#__PURE__*/React.createElement(\"td\", {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, num)))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" Simple Table\"), typeof data.columns, data.columns), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table tablesorter \",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, data.columns && data.columns.map((name, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, \"name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Salary\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, \"Dakota Rice\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Niger\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Oud-Turnhout\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"$36,738\")))))));\n} // { data && (<table >\n// <thead>\n//   <tr>\n//     <th\n//       v-for=\"(key, indexHeader) in parse_header\"\n//       :class=\"{ active: sortKey == key }\"\n//       :key=\"indexHeader\"\n//       @click=\"sorting(key)\"\n//     >\n//       <!-- @click=\"sortBy(key)\" -->\n//       {{ key | capitalize }} &#8645;\n//       <span\n//         class=\"arrow\"\n//         :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n//       ></span>\n//     </th>\n//   </tr>\n// </thead>\n// <tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n//   <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n// </tr>\n// </table>","map":{"version":3,"sources":["/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx"],"names":["React","useState","useEffect","readRemoteFile","TableCsv","data","setData","header","setHeader","rows","setRows","complete","results","console","log","shif","map","name","ii","numList","i","num","j","columns"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { readRemoteFile } from 'react-papaparse'\n// import { csv } from 'd3';\n// useEffect(() => {\n//   const row: string = \"NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS\"\n//   const url: any = '/alkoholilupa_toimipaikkatiedot_34.csv';\n//   csv(url).then((data: any) => {\n//     console.log(\"DATA CSV\", (data));\n//     console.log(\" CSV\", data.columns);\n//     console.log(\" data\", data[0]);\n//     setData(data)\n//   });\n// }, [])\n// NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS: \"Aalto-sali;V�in�nkatu 7;40100;Jyv�skyl�;Jyv�skyl�;01.05.2018;Ennakkoon hyv�ksytty anniskelualue;0174708-5\"\n\nexport default function TableCsv() {\n  const [data, setData] = useState<any>([]);\n  const [header, setHeader] = useState<any>([]);\n  const [rows, setRows] = useState<any>([]);\n\n  useEffect(() => {\n    readRemoteFile('/alkoholilupa_toimipaikkatiedot_34.csv', {\n      complete: (results: any) => {\n        console.log('Results:', results)\n        setData(results)\n        if (results) {\n          setHeader(results.data[0]);\n          setRows(results.data.shif);\n        }\n      }\n    });\n    // readRemoteFile('http://example.com/big.csv', {\n    //   step: (row) => {\n    //     console.log('Row:', row.data)\n    //   },\n    //   complete: () => {\n    //     console.log('All done!')\n    //   }\n    // })\n  }, [])\n\n  return (\n    <div className=\"card \">\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <table className=\"table tablesorter \" id=\"\">\n            <thead className=\" text-primary\">\n              <tr>\n                {data.data && (data.data[0].map((name: string, ii: number) => (\n                  <th key={ii}>{name}</th>)\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {data.data &&\n                (data.data.map((numList: any, i: number) => (\n                  <tr key={i} className={i === 0 ? \"font-weight-bold\" : \"\"} >\n                    {\n                      numList.map((num: any, j: number) =>\n                        <td key={j}>{num}</td>)\n                    }\n                  </tr>)\n                ))\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n      <div className=\"card-header\">\n        <h4 className=\"card-title\"> Simple Table</h4>\n        {typeof (data.columns)}\n        {(data.columns)}\n        {/* {data.length > 0 ? data[0] : ''} */}\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <table className=\"table tablesorter \" id=\"\">\n            <thead className=\" text-primary\">\n              <tr>\n                {data.columns && data.columns.map((name: string, i: number) => (\n                  <th key={i}>name</th>\n                ))}\n                <th>Country</th>\n                <th>City</th>\n                <th className=\"text-center\">Salary</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Dakota Rice</td>\n                <td>Niger</td>\n                <td>Oud-Turnhout</td>\n                <td className=\"text-center\">$36,738</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// { data && (<table >\n// <thead>\n//   <tr>\n//     <th\n//       v-for=\"(key, indexHeader) in parse_header\"\n//       :class=\"{ active: sortKey == key }\"\n//       :key=\"indexHeader\"\n//       @click=\"sorting(key)\"\n//     >\n//       <!-- @click=\"sortBy(key)\" -->\n//       {{ key | capitalize }} &#8645;\n//       <span\n//         class=\"arrow\"\n//         :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n//       ></span>\n//     </th>\n//   </tr>\n// </thead>\n// <tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n//   <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n// </tr>\n// </table>"]},"metadata":{},"sourceType":"module"}