{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { readRemoteFile } from 'react-papaparse';\nexport default function TableCsv() {\n  const [data, setData] = useState([]);\n  const [header, setHeader] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [order, setOrder] = useState(1);\n\n  const filterData = () => {\n    return query ? rows.filter(obj => {\n      let flag = false;\n      Object.values(obj).forEach(val => {\n        if (String(val ? val.toLowerCase() : val).indexOf(query.toLowerCase()) > -1) {\n          flag = true;\n          return;\n        }\n      });\n      if (flag) return obj;\n    }) : rows;\n  };\n\n  const sorting = key => {\n    setOrder(order * -1);\n    setRows(rows.sort((a, b) => (order === 1 ? a[key] > b[key] : a[key] < b[key]) ? 1 : -1));\n  }; // const sortBy = (mykey: string) => {\n  //   setSortKey(myKey);\n  //   let sortOrders[myKey] = sortOrders[myKey] * -1;\n  // },\n\n\n  useEffect(() => {\n    readRemoteFile('/alkoholilupa_toimipaikkatiedot_34.csv', {\n      complete: results => {\n        // console.log('Results:', results)\n        setData(results);\n        setHeader(results.data.shift());\n        setRows(results.data); // }\n      }\n    }); // readRemoteFile('http://example.com/big.csv', {\n    //   step: (row) => {\n    //     console.log('Row:', row.data)\n    //   },\n    //   complete: () => {\n    //     console.log('All done!')\n    //   }\n    // })\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \" Top Alcohol Place\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-prepend mb-3 pl-2 pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control border search\",\n    placeholder: \"Search a place...\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    \"aria-label\": \"search place\",\n    \"aria-describedby\": \"alcohol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table tablesorter \",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, header && header.map((name, ii) => /*#__PURE__*/React.createElement(\"th\", {\n    key: ii,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, name)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, filterData() && filterData().map((numList, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, numList.map((num, j) => /*#__PURE__*/React.createElement(\"td\", {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, num)))))))));\n} // { data && (<table >\n// <thead>\n//   <tr>\n//     <th\n//       v-for=\"(key, indexHeader) in parse_header\"\n//       :class=\"{ active: sortKey == key }\"\n//       :key=\"indexHeader\"\n//       @click=\"sorting(key)\"\n//     >\n//       <!-- @click=\"sortBy(key)\" -->\n//       {{ key | capitalize }} &#8645;\n//       <span\n//         class=\"arrow\"\n//         :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n//       ></span>\n//     </th>\n//   </tr>\n// </thead>\n// <tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n//   <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n// </tr>\n// </table>","map":{"version":3,"sources":["/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx"],"names":["React","useState","useEffect","readRemoteFile","TableCsv","data","setData","header","setHeader","rows","setRows","query","setQuery","order","setOrder","filterData","filter","obj","flag","Object","values","forEach","val","String","toLowerCase","indexOf","sorting","key","sort","a","b","complete","results","shift","e","target","value","map","name","ii","numList","i","num","j"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { readRemoteFile } from 'react-papaparse'\n\nexport default function TableCsv() {\n  const [data, setData] = useState<any>([]);\n  const [header, setHeader] = useState<any>([]);\n  const [rows, setRows] = useState<any>([]);\n  const [query, setQuery] = useState<string>(\"\")\n  const [order, setOrder] = useState<number>(1)\n\n  const filterData = () => {\n    return query\n      ? rows.filter((obj: any) => {\n        let flag: Boolean = false;\n        Object.values(obj).forEach((val: any) => {\n          if (\n            String(val ? val.toLowerCase() : val).indexOf(\n              query.toLowerCase()\n            ) > -1\n          ) {\n            flag = true;\n            return;\n          }\n        });\n        if (flag) return obj;\n      })\n      : rows;\n  }\n\n  const sorting = (key: string) => {\n    setOrder(order * -1);\n    setRows(rows.sort((a: any, b: any) =>\n      (order === 1 ? a[key] > b[key] : a[key] < b[key]) ? 1 : -1\n    ));\n  }\n\n  // const sortBy = (mykey: string) => {\n  //   setSortKey(myKey);\n  //   let sortOrders[myKey] = sortOrders[myKey] * -1;\n  // },\n\n    useEffect(() => {\n      readRemoteFile('/alkoholilupa_toimipaikkatiedot_34.csv', {\n        complete: (results: any) => {\n          // console.log('Results:', results)\n          setData(results)\n          setHeader(results.data.shift());\n          setRows(results.data);\n          // }\n        }\n      });\n      // readRemoteFile('http://example.com/big.csv', {\n      //   step: (row) => {\n      //     console.log('Row:', row.data)\n      //   },\n      //   complete: () => {\n      //     console.log('All done!')\n      //   }\n      // })\n    }, [])\n\n  return (\n    <div className=\"card \">\n      <div className=\"card-header\">\n        <h4 className=\"card-title\"> Top Alcohol Place</h4>\n      </div>\n      {/* <div>\n        <label className=\"text-center\" >Search Place\n        <input id=\"searchAlcohol\" name=\"searchAlcohol\" type=\"text\" className=\"search\" placeholder=\"Search...\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search} />\n        </label>\n      </div> */}\n      <div className=\"input-group-prepend mb-3 pl-2 pr-2\">\n        <input type=\"text\" className=\"form-control border search\" placeholder=\"Search a place...\" value={query} onChange={(e) => setQuery(e.target.value)} aria-label=\"search place\" aria-describedby=\"alcohol\" />\n        {/* <div className=\"input-group-append\">\n          <button className=\"btn btn-secondary\" type=\"button\">Button</button>\n        </div> */}\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <table className=\"table tablesorter \" id=\"\">\n            <thead className=\" text-primary\">\n              <tr>\n                {header && (header.map((name: string, ii: number) => (\n                  <th key={ii}>{name}</th>)\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {filterData() &&\n                (filterData().map((numList: any, i: number) => (\n                  <tr key={i} >\n                    {\n                      numList.map((num: any, j: number) =>\n                        <td key={j}>{num}</td>)\n                    }\n                  </tr>)\n                ))\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n// { data && (<table >\n// <thead>\n//   <tr>\n//     <th\n//       v-for=\"(key, indexHeader) in parse_header\"\n//       :class=\"{ active: sortKey == key }\"\n//       :key=\"indexHeader\"\n//       @click=\"sorting(key)\"\n//     >\n//       <!-- @click=\"sortBy(key)\" -->\n//       {{ key | capitalize }} &#8645;\n//       <span\n//         class=\"arrow\"\n//         :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n//       ></span>\n//     </th>\n//   </tr>\n// </thead>\n// <tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n//   <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n// </tr>\n// </table>"]},"metadata":{},"sourceType":"module"}