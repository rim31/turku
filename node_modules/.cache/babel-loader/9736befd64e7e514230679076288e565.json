{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/musicuizz/frontend/src/components/screens/Covid.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nconst headers = new Headers({\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n});\nexport default function Covid() {\n  const [covid, setCovid] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  function countryDataGraph(data, country, caseType, dateTo) {\n    let resultCases = [];\n    let resultDates = [];\n\n    if (data.length > 0) {\n      data.forEach(item => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'us' || debug === true) {\n          if (moment(item.last_update).isAfter(dateTo)) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if (moment(item.Date).isAfter(dateTo)) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      });\n\n      let resultCasesDiff = _.map(resultCases, function (e, i) {\n        return resultCases[i + 1] - e < 0 ? 0 : resultCases[i + 1] - e;\n      });\n\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff); // inversion between resultCasesDiff and resultCases for display graph of variations and not total\n\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return {\n        resultCases,\n        resultDates,\n        resultCasesDiff\n      };\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n    }\n  }\n\n  const getData = async () => {\n    try {\n      // const response = await fetch(\"https://sampo.thl.fi/pivot/prod/en/epirapo/covid19case/fact_epirapo_covid19case.json\", {\n      const country = 'finland';\n      const caseType = 'confirmed';\n      const dateTo = `${moment().subtract(3, 'months').format()}`;\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`).then(res => res.json()).then(resp => setCovid(resp)).catch(err => {\n        throw err;\n      });\n      console.log(\"getData \", covid);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    console.log(\"Covid : \", covid);\n  }, [covid]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, covid && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, covid.label))));\n}","map":{"version":3,"sources":["/Users/rims/Documents/musicuizz/frontend/src/components/screens/Covid.tsx"],"names":["React","useState","useEffect","moment","headers","Headers","Covid","covid","setCovid","data","setData","countryDataGraph","country","caseType","dateTo","resultCases","resultDates","length","forEach","item","debug","last_update","isAfter","push","cases","format","Date","Cases","resultCasesDiff","_","map","e","i","pop","dataDiff","console","log","setDataDiff","setLabels","getData","subtract","fetch","then","res","json","resp","catch","err","error","message","color","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport FetchCovidFinland from '../api/FetchCovidFinland';\nimport { createContainer } from \"unstated-next\";\nimport moment from 'moment';\n\nconst headers = new Headers({\n  \"Accept\": \"application/json\",\n  \"Content-Type\": \"application/json\",\n  \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n});\n\nexport default function Covid() {\n  const [covid, setCovid] = useState<any>(\"\")\n  const [data, setData] = useState<any>([])\n\n  function countryDataGraph(data: any, country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        // console.log(\"item : \", caseType, item[caseType], item);\n        if (country === 'us' || debug === true) {\n          if ((moment(item.last_update).isAfter(dateTo))) {\n            resultCases.push(caseType === \"confirmed\" ? item.cases : item[caseType]);\n            resultDates.push(moment(item.last_update).format('YYYY/MM/DD'));\n          }\n        } else {\n          if ((moment(item.Date).isAfter(dateTo))) {\n            resultCases.push(item.Cases);\n            resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n          }\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      dataDiff === [] ? console.log(dataDiff) : console.log('');\n      setData(resultCasesDiff);// inversion between resultCasesDiff and resultCases for display graph of variations and not total\n      setDataDiff(resultCases);\n      setLabels(resultDates);\n      return ({ resultCases, resultDates, resultCasesDiff });\n    } else {\n      setData([]);\n      setLabels([]);\n      setDataDiff([]);\n\n    }\n  }\n\n  const getData = async () => {\n    try {\n      // const response = await fetch(\"https://sampo.thl.fi/pivot/prod/en/epirapo/covid19case/fact_epirapo_covid19case.json\", {\n      const country: string = 'finland';\n      const caseType: string = 'confirmed';\n      const dateTo: string = `${moment().subtract(3, 'months').format()}`\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`)\n        .then(res => res.json())\n        .then(resp => setCovid(resp))\n        .catch((err) => { throw (err) })\n      console.log(\"getData \", covid);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, [])\n\n  useEffect(() => {\n    console.log(\"Covid : \", covid)\n  }, [covid])\n\n  return (\n    <div className=\"main-container\">\n      {\n        covid && (\n          <div className=\"city\">\n            <div className=\"city-temp\">\n              Today\n            </div>\n            <div className=\"info\">\n              <p style={{ color: \"black\" }}>{covid.label}</p>\n            </div>\n          </div>\n        )\n      }\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}