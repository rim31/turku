{"ast":null,"code":"// eslint-disable-next-line\nimport * as React from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { createContainer } from \"unstated-next\";\nimport axios from 'axios';\nimport { readRemoteFile } from 'react-papaparse'; // const URL_PAGE = `https://api.turku.fi/linkedevents/v1/image/?page=`;\n// source : \"https://api.covid19api.com/\"\n\nexport const useStore = () => {\n  const [data, setData] = React.useState([]); // data for graph\n\n  const [dataDiff, setDataDiff] = React.useState([]); // data diff for graph\n\n  const [labels, setLabels] = React.useState([]);\n  const [eventUrl, setEventUrl] = React.useState(\"https://api.turku.fi/linkedevents/v1/event/?page=1\");\n  const [events, setEvents] = React.useState([]);\n  const [linames, setliNames] = React.useState([]);\n  const [linamesYears, setliNamesYears] = React.useState([]);\n  const [linamesLocation, setliNamesLocation] = React.useState([]);\n  const [linamesFamily, setliNamesFamily] = React.useState([]);\n  const [nextEvents, setNextEvents] = React.useState(\"\");\n  const [previousEvents, setPreviousEvents] = React.useState(\"\");\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const fetchEventsUrl = async url => {\n    const response = await axios.get(url ? url : eventUrl);\n    setEvents(response.data.data);\n    if (response.data.meta.next) setNextEvents(response.data.meta.next);\n    if (response.data.meta.previous) setPreviousEvents(response.data.meta.previous);\n    console.log(\"Response events unstated\", response.data);\n    return response.data;\n  };\n\n  function countryDataGraph(data, country, caseType, dateTo) {\n    let resultCases = [];\n    let resultDates = [];\n\n    if (data.length > 0) {\n      data.forEach(item => {\n        if (moment(item.Date).isAfter(dateTo)) {\n          resultCases.push(item.Cases);\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n        }\n      });\n\n      let resultCasesDiff = _.map(resultCases, function (e, i) {\n        return resultCases[i + 1] - e < 0 ? 0 : resultCases[i + 1] - e;\n      });\n\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      setDataDiff(resultCasesDiff);\n      setData(resultCases);\n      setLabels(resultDates);\n    }\n  } // const response = await fetch(\"https://sampo.thl.fi/pivot/prod/en/epirapo/covid19case/fact_epirapo_covid19case.json\", {\n\n\n  const getDataCovid = async () => {\n    try {\n      const country = 'finland';\n      const caseType = 'confirmed';\n      const dateTo = `${moment().subtract(3, 'months').format()}`;\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n        method: 'GET',\n        redirect: 'follow',\n        headers: headers\n      }).then(response => response.json()).then(res => {\n        countryDataGraph(res, country, caseType, dateTo); // cleaning data for ChartJS\n      }).catch(err => alert(err));\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  {\n    /**  function get Remote .csv\n    */\n  }\n\n  const getCsv = csv => {\n    readRemoteFile(csv, {\n      complete: results => {\n        if (results) {\n          setHeader(results.data.shift());\n          setRows(results.data);\n        }\n      }\n    });\n  };\n\n  return {\n    data,\n    dataDiff,\n    labels,\n    headers,\n    events,\n    nextEvents,\n    previousEvents,\n    getDataCovid,\n    fetchEventsUrl,\n    setEventUrl,\n    setNextEvents,\n    setPreviousEvents\n  };\n};\nexport const StoreContainer = createContainer(useStore);","map":{"version":3,"sources":["/Users/rims/Documents/musicuizz/frontend/src/components/Store.tsx"],"names":["React","moment","_","createContainer","axios","readRemoteFile","useStore","data","setData","useState","dataDiff","setDataDiff","labels","setLabels","eventUrl","setEventUrl","events","setEvents","linames","setliNames","linamesYears","setliNamesYears","linamesLocation","setliNamesLocation","linamesFamily","setliNamesFamily","nextEvents","setNextEvents","previousEvents","setPreviousEvents","headers","Headers","fetchEventsUrl","url","response","get","meta","next","previous","console","log","countryDataGraph","country","caseType","dateTo","resultCases","resultDates","length","forEach","item","Date","isAfter","push","Cases","format","resultCasesDiff","map","e","i","pop","getDataCovid","subtract","fetch","method","redirect","then","json","res","catch","err","alert","error","message","getCsv","csv","complete","results","setHeader","shift","setRows","StoreContainer"],"mappings":"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","sourcesContent":["// eslint-disable-next-line\nimport * as React from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { createContainer } from \"unstated-next\";\nimport axios from 'axios';\nimport { readRemoteFile } from 'react-papaparse'\n\n// const URL_PAGE = `https://api.turku.fi/linkedevents/v1/image/?page=`;\n// source : \"https://api.covid19api.com/\"\n\nexport const useStore = () => {\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]);\n  const [eventUrl, setEventUrl] = React.useState<string>(\"https://api.turku.fi/linkedevents/v1/event/?page=1\");\n  const [events, setEvents] = React.useState<any[]>([]);\n  const [linames, setliNames] = React.useState<any[]>([]);\n  const [linamesYears, setliNamesYears] = React.useState<any[]>([]);\n  const [linamesLocation, setliNamesLocation] = React.useState<any[]>([]);\n  const [linamesFamily, setliNamesFamily] = React.useState<any[]>([]);\n  const [nextEvents, setNextEvents] = React.useState<string>(\"\");\n  const [previousEvents, setPreviousEvents] = React.useState<string>(\"\");\n\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const fetchEventsUrl = async (url: any) => {\n    const response: any = await axios.get(url ? url : eventUrl);\n    setEvents(response.data.data);\n    if (response.data.meta.next)\n      setNextEvents(response.data.meta.next);\n    if (response.data.meta.previous)\n      setPreviousEvents(response.data.meta.previous);\n    console.log(\"Response events unstated\", response.data);\n    return response.data;\n  }\n\n  function countryDataGraph(data: any, country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        if ((moment(item.Date).isAfter(dateTo))) {\n          resultCases.push(item.Cases);\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      setDataDiff(resultCasesDiff);\n      setData(resultCases);\n      setLabels(resultDates);\n    }\n  }\n\n  // const response = await fetch(\"https://sampo.thl.fi/pivot/prod/en/epirapo/covid19case/fact_epirapo_covid19case.json\", {\n  const getDataCovid = async () => {\n    try {\n      const country: string = 'finland';\n      const caseType: string = 'confirmed';\n      const dateTo: string = `${moment().subtract(3, 'months').format()}`\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n        method: 'GET',\n        redirect: 'follow',\n        headers: headers\n      })\n        .then((response: any) => response.json()).then((res) => {\n          countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n        }).catch(err => alert(err));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  {/**  function get Remote .csv\n   */}\n   const getCsv = (csv: string) => {\n    readRemoteFile(csv, {\n      complete: (results: any) => {\n        if (results) {\n          setHeader(results.data.shift());\n          setRows(results.data);\n        }\n      }\n    })\n   }\n\n  return {\n    data,\n    dataDiff,\n    labels,\n    headers,\n    events,\n    nextEvents,\n    previousEvents,\n    getDataCovid,\n    fetchEventsUrl,\n    setEventUrl,\n    setNextEvents,\n    setPreviousEvents,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n"]},"metadata":{},"sourceType":"module"}