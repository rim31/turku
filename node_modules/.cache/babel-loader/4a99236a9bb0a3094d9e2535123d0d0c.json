{"ast":null,"code":"var _jsxFileName = \"/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { parse } from 'papaparse';\nimport { csv } from 'd3'; // import csv from '../../../public/alkoholilupa_toimipaikkatiedot_34.csv'\n// NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS: \"Aalto-sali;V�in�nkatu 7;40100;Jyv�skyl�;Jyv�skyl�;01.05.2018;Ennakkoon hyv�ksytty anniskelualue;0174708-5\"\n\nexport default function TableCsv() {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const row = \"NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS\";\n    const url = '/alkoholilupa_toimipaikkatiedot_34.csv';\n    csv(url).then(data => {\n      console.log(\"DATA CSV\", data);\n      console.log(\" CSV\", data.columns);\n      console.log(\" data\", data[0]);\n      setData(data); // for (let i: number = 0; i < data.length - 360; i++) {\n      //   // let newTab: any = (...tab, data[i]);\n      //   console.log('');\n      // }\n    });\n  }, []);\n  useEffect(() => {\n    console.log(\"Data\", data);\n    let csv = parse('/alkoholilupa_toimipaikkatiedot_34.csv', {\n      transform: function (value) {\n        try {\n          return JSON.parse(value);\n        } catch (err) {\n          return value;\n        }\n      }\n    });\n    console.log(\"PARSE CSVVV : \", csv);\n  }, [data]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Import CSV File!\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"csv-input\",\n    type: \"file\",\n    ref: input => {\n      this.filesInput = input;\n    },\n    name: \"file\",\n    placeholder: null,\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: this.importCSV,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \" Upload now!\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \" Simple Table\"), typeof data.columns, data.columns), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-responsive\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table tablesorter \",\n    id: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    className: \" text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, data.columns && data.columns.map((name, i) => /*#__PURE__*/React.createElement(\"th\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, \"name\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Salary\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, \"Dakota Rice\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"Niger\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Oud-Turnhout\"), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"$36,738\")))))));\n}\n{\n  /* <table v-if=\"parse_csv\">\n  <thead>\n   <tr>\n     <th\n       v-for=\"(key, indexHeader) in parse_header\"\n       :class=\"{ active: sortKey == key }\"\n       :key=\"indexHeader\"\n       @click=\"sorting(key)\"\n     >\n       <!-- @click=\"sortBy(key)\" -->\n       {{ key | capitalize }} &#8645;\n       <span\n         class=\"arrow\"\n         :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n       ></span>\n     </th>\n   </tr>\n  </thead>\n  <tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n   <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n  </tr>\n  </table> */\n}","map":{"version":3,"sources":["/Users/rims/Documents/musicuizz/frontend/src/components/template/TableCsv.tsx"],"names":["React","useState","useEffect","parse","csv","TableCsv","data","setData","row","url","then","console","log","columns","transform","value","JSON","err","input","filesInput","handleChange","importCSV","map","name","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { parse } from 'papaparse';\nimport { csv } from 'd3';\n// import csv from '../../../public/alkoholilupa_toimipaikkatiedot_34.csv'\n// NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS: \"Aalto-sali;V�in�nkatu 7;40100;Jyv�skyl�;Jyv�skyl�;01.05.2018;Ennakkoon hyv�ksytty anniskelualue;0174708-5\"\n\nexport default function TableCsv() {\n  const [data, setData] = useState<any>([]);\n\n\n\n  useEffect(() => {\n    const row: string = \"NIMI ;OSOITE;POSTINUMERO;POSTITOIMIPAIKKA;KUNTA;LUVANALKUPVM;LUPATYYPPI;Y-TUNNUS\"\n    const url: any = '/alkoholilupa_toimipaikkatiedot_34.csv';\n    csv(url).then((data: any) => {\n      console.log(\"DATA CSV\", (data));\n      console.log(\" CSV\", data.columns);\n      console.log(\" data\", data[0]);\n      setData(data)\n      // for (let i: number = 0; i < data.length - 360; i++) {\n      //   // let newTab: any = (...tab, data[i]);\n      //   console.log('');\n      // }\n    });\n\n\n  }, [])\n\n  useEffect(() => {\n    console.log(\"Data\", data);\n\n    let csv = parse('/alkoholilupa_toimipaikkatiedot_34.csv', {\n      transform: function (value) {\n        try {\n          return JSON.parse(value);\n        } catch (err) {\n          return value;\n        }\n      }\n    });\n    console.log(\"PARSE CSVVV : \", csv)\n\n  }, [data])\n\n  return (\n    <div className=\"card \">\n      <div className=\"App\">\n        <h2>Import CSV File!</h2>\n        <input\n          className=\"csv-input\"\n          type=\"file\"\n          ref={input => {\n            this.filesInput = input;\n          }}\n          name=\"file\"\n          placeholder={null}\n          onChange={this.handleChange}\n        />\n        <p />\n        <button onClick={this.importCSV}> Upload now!</button>\n      </div>\n      <div className=\"card-header\">\n        <h4 className=\"card-title\"> Simple Table</h4>\n        {typeof (data.columns)}\n        {(data.columns)}\n        {/* {data.length > 0 ? data[0] : ''} */}\n      </div>\n      <div className=\"card-body\">\n        <div className=\"table-responsive\">\n          <table className=\"table tablesorter \" id=\"\">\n            <thead className=\" text-primary\">\n              <tr>\n                {data.columns && data.columns.map((name: string, i: number) => (\n                  <th key={i}>name</th>\n                ))}\n                <th>Country</th>\n                <th>City</th>\n                <th className=\"text-center\">Salary</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Dakota Rice</td>\n                <td>Niger</td>\n                <td>Oud-Turnhout</td>\n                <td className=\"text-center\">$36,738</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n{/* <table v-if=\"parse_csv\">\n<thead>\n  <tr>\n    <th\n      v-for=\"(key, indexHeader) in parse_header\"\n      :class=\"{ active: sortKey == key }\"\n      :key=\"indexHeader\"\n      @click=\"sorting(key)\"\n    >\n      <!-- @click=\"sortBy(key)\" -->\n      {{ key | capitalize }} &#8645;\n      <span\n        class=\"arrow\"\n        :class=\"sortOrders[key] > 0 ? 'asc' : 'dsc'\"\n      ></span>\n    </th>\n  </tr>\n</thead>\n<tr v-for=\"(csv, indexTab) in filterData\" :key=\"indexTab\">\n  <td v-for=\"(key, index) in parse_header\" :key=\"index\">{{csv[key]}}</td>\n</tr>\n</table> */}"]},"metadata":{},"sourceType":"module"}