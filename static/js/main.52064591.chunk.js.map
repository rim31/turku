{"version":3,"sources":["components/Store.tsx","App.tsx","index.tsx"],"names":["createContainer","React","data","setData","dataDiff","setDataDiff","labels","setLabels","eventUrl","setEventUrl","events","setEvents","nextEvents","setNextEvents","previousEvents","setPreviousEvents","headers","Headers","fetchEventsUrl","url","a","axios","get","response","meta","next","previous","countryDataGraph","country","caseType","dateTo","resultCases","resultDates","length","forEach","item","moment","Date","isAfter","push","Cases","format","resultCasesDiff","_","map","e","i","pop","getDataCovid","subtract","fetch","method","redirect","then","json","res","catch","err","alert","console","error","message","App","useState","page","useEffect","log","ReactDOM","render","document","getElementById"],"mappings":"6RA2F8BA,aAjFN,WAAO,IAAD,EACJC,WAAmD,IAD/C,mBACrBC,EADqB,KACfC,EADe,OAEIF,WAA6C,IAFjD,mBAErBG,EAFqB,KAEXC,EAFW,OAGAJ,WAAmD,IAHnD,mBAGrBK,EAHqB,KAGbC,EAHa,OAIIN,WAAuB,sDAJ3B,mBAIrBO,EAJqB,KAIXC,EAJW,OAKAR,WAAsB,IALtB,mBAKrBS,EALqB,KAKbC,EALa,OAMQV,WAAuB,IAN/B,mBAMrBW,EANqB,KAMTC,EANS,OAOgBZ,WAAuB,IAPvC,mBAOrBa,EAPqB,KAOLC,EAPK,KAQtBC,EAAU,IAAIC,QAAQ,CAC1B,OAAU,mBACV,eAAgB,mBAChB,aAAc,uFAGVC,EAAc,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACOC,IAAMC,IAAIH,GAAYX,GAD7B,cACfe,EADe,OAErBZ,EAAUY,EAASrB,KAAKA,MACpBqB,EAASrB,KAAKsB,KAAKC,MACrBZ,EAAcU,EAASrB,KAAKsB,KAAKC,MAC/BF,EAASrB,KAAKsB,KAAKE,UACrBX,EAAkBQ,EAASrB,KAAKsB,KAAKE,UANlB,kBAQdH,EAASrB,MARK,2CAAH,sDAWpB,SAASyB,EAAiBzB,EAAW0B,EAAiBC,EAAkBC,GACtE,IAAIC,EAAqB,GACrBC,EAAqB,GACzB,GAAI9B,EAAK+B,OAAS,EAAG,CACnB/B,EAAKgC,SAAQ,SAACC,GACPC,IAAOD,EAAKE,MAAMC,QAAQR,KAC7BC,EAAYQ,KAAKJ,EAAKK,OACtBR,EAAYO,KAAKH,IAAOD,EAAKE,MAAMI,OAAO,mBAG9C,IAAIC,EAAyBC,IAAEC,IAAIb,GAAa,SAAUc,EAAQC,GAChE,OAAQf,EAAYe,EAAI,GAAKD,EAAK,EAAI,EAAKd,EAAYe,EAAI,GAAKD,KAElEH,EAAgBK,MAChBhB,EAAYgB,MACZf,EAAYe,MACZ1C,EAAYqC,GACZvC,EAAQ4B,GACRxB,EAAUyB,IAuBd,MAAO,CACL9B,OACAE,WACAE,SACAU,UACAN,SACAE,aACAE,iBACAkC,aA1BgB,uCAAG,4BAAA5B,EAAA,sEAEO,UACC,YACnBU,EAJW,UAISM,MAASa,SAAS,EAAG,UAAUR,UAJxC,SAKXS,MAAM,sCAAD,OAHa,UAGb,mBAFc,YAEd,sBAA+EpB,EAA/E,eAA4FM,MAASK,OAAO,wBAA0B,CAC/IU,OAAQ,MACRC,SAAU,SACVpC,QAASA,IAERqC,MAAK,SAAC9B,GAAD,OAAmBA,EAAS+B,UAAQD,MAAK,SAACE,GAC9C5B,EAAiB4B,EATG,EACC,EAQoBzB,MACxC0B,OAAM,SAAAC,GAAG,OAAIC,MAAMD,MAZP,uDAcjBE,QAAQC,MAAM,KAAIC,SAdD,yDAAH,qDA2BhB3C,iBACAT,cACAI,gBACAE,wB,YC1CW+C,MAjCf,WAAgB,IAAD,EACW7D,IAAM8D,SAAiB,SADlC,mBACNC,EADM,UAEb/D,IAAMgE,WAAU,WACdN,QAAQO,IAAI,UAAWF,KACtB,CAACA,KCGNG,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.52064591.chunk.js","sourcesContent":["// eslint-disable-next-line\nimport * as React from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { createContainer } from \"unstated-next\";\nimport axios from 'axios';\n\n// const URL_PAGE = `https://api.turku.fi/linkedevents/v1/image/?page=`;\n// source : \"https://api.covid19api.com/\"\n\nexport const useStore = () => {\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]);\n  const [eventUrl, setEventUrl] = React.useState<string>(\"https://api.turku.fi/linkedevents/v1/event/?page=1\");\n  const [events, setEvents] = React.useState<any[]>([]);\n  const [nextEvents, setNextEvents] = React.useState<string>(\"\");\n  const [previousEvents, setPreviousEvents] = React.useState<string>(\"\");\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n\n  const fetchEventsUrl = async (url: any) => {\n    const response: any = await axios.get(url ? url : eventUrl);\n    setEvents(response.data.data);\n    if (response.data.meta.next)\n      setNextEvents(response.data.meta.next);\n    if (response.data.meta.previous)\n      setPreviousEvents(response.data.meta.previous);\n    // console.log(\"Response events unstated\", response.data);\n    return response.data;\n  }\n\n  function countryDataGraph(data: any, country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      data.forEach((item: any) => {\n        if ((moment(item.Date).isAfter(dateTo))) {\n          resultCases.push(item.Cases);\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n        }\n      })\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      setDataDiff(resultCasesDiff);\n      setData(resultCases);\n      setLabels(resultDates);\n    }\n  }\n\n  // const response = await fetch(\"https://sampo.thl.fi/pivot/prod/en/epirapo/covid19case/fact_epirapo_covid19case.json\", {\n  const getDataCovid = async () => {\n    try {\n      const country: string = 'finland';\n      const caseType: string = 'confirmed';\n      const dateTo: string = `${moment().subtract(3, 'months').format()}`\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n        method: 'GET',\n        redirect: 'follow',\n        headers: headers\n      })\n        .then((response: any) => response.json()).then((res) => {\n          countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n        }).catch(err => alert(err));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  return {\n    data,\n    dataDiff,\n    labels,\n    headers,\n    events,\n    nextEvents,\n    previousEvents,\n    getDataCovid,\n    fetchEventsUrl,\n    setEventUrl,\n    setNextEvents,\n    setPreviousEvents,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n","import React from 'react';\nimport './App.css';\nimport Home from \"./components/screens/Home\";\nimport Covid from \"./components/screens/Covid\";\nimport TableCsvPlaceAlcohol from \"./components/template/TableCsvPlaceAlcohol\";\nimport TableCsvName from \"./components/template/TableCsvName\";\nimport ListImages from \"./components/template/ListImages\";\nimport SideBar from './components/template/SideBar';\nimport Footer from './components/template/Footer';\nimport NavBar from './components/template/NavBar';\n// import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { StoreContainer } from \"./components/Store\"\n\nfunction App() {\n  const [page, setPage] = React.useState<string>(\"turku\")\n  React.useEffect(() => {\n    console.log('page : ', page)\n  }, [page])\n  return (\n    // <Router>\n    <StoreContainer.Provider>\n      <div>\n        <NavBar setPage={setPage} />\n        <SideBar setPage={setPage} />\n        <div className=\"main-panel mt-30\">\n          {page === 'event' && (<ListImages />)}\n          {page === 'name' && (<TableCsvName />)}\n          {page === 'place' && (<TableCsvPlaceAlcohol />)}\n          {page === 'covid' && (<Covid />)}\n          {page === 'turku' && (<Home setPage={setPage} />)}\n          {/* <Switch>\n              <Route path={'*'} ><NotFound /></Route>\n            </Switch> */}\n        </div>\n        <Footer />\n      </div >\n    </StoreContainer.Provider>\n    // </Router >\n  );\n}\n// function NotFound() {\n//   return (\n//     <h1>Page Not Found</h1>\n//   )\n// }\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// serviceWorker.unregister();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}