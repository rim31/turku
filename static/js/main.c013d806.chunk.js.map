{"version":3,"sources":["components/template/cards/CardsEvent.tsx","components/template/cards/CardsDrinks.tsx","components/template/cards/CardsName.tsx","components/Store.tsx","components/template/cards/CardsCovid.tsx","components/screens/Home.tsx","components/template/BarCharts.tsx","components/screens/Covid.tsx","components/template/TableCsvPlaceAlcohol.tsx","components/template/TableCsvName.tsx","components/api/FetchEventsTurku.tsx","components/template/ListEvents.tsx","components/template/SideBar.tsx","components/template/Footer.tsx","components/template/NavBar.tsx","App.tsx","index.tsx"],"names":["CardsEvent","className","src","alt","CardsDrinks","CardsName","StoreContainer","createContainer","React","data","setData","dataDiff","setDataDiff","labels","setLabels","lastCases","setLastCases","eventUrl","setEventUrl","events","setEvents","nextEvents","setNextEvents","previousEvents","setPreviousEvents","headers","Headers","fetchEventsUrl","url","a","axios","get","response","meta","next","previous","countryDataGraph","country","caseType","dateTo","resultCases","resultDates","length","forEach","item","moment","Date","isAfter","push","Cases","format","resultCasesDiff","_","map","e","i","pop","getDataCovid","subtract","fetch","method","redirect","then","json","res","catch","err","alert","console","error","message","CardsCovid","unstated","useContainer","Home","props","useEffect","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","type","data-dismiss","fontSize","color","fontWeight","textShadow","onClick","setPage","LinearChart","ref","useRef","isWindowClient","window","useState","innerWidth","windowSize","setWindowSize","setSize","addEventListener","removeEventListener","current","offsetWidth","datasets","label","backgroundColor","hoverBackgroundColor","options","legend","display","fontColor","title","text","scales","yAxes","ticks","scaleLabel","labelString","xAxes","responsive","textAlign","height","Covid","loading","setLoading","width","TableCsvPlaceAlcohol","header","setHeader","rows","setRows","query","setQuery","setTitle","order","setOrder","filterData","filter","obj","flag","Object","values","val","String","toLowerCase","indexOf","name","readRemoteFile","complete","results","shift","placeholder","value","onChange","target","aria-label","aria-describedby","id","ii","key","sort","b","numList","num","j","TableCsvName","getNamesData","FetchEventsTurku","ListEvents","allEvents","setAllEvents","setUrl","page","getAllEvents","match","search","trim","onKeyPress","event","images","objectFit","fi","end_time","substr","description","data-toggle","data-target","htmlString","replace","parseHtml","SideBar","all","textDecoration","paddingLeft","Footer","bottom","position","right","href","styles","myHeader","justifyContent","top","zIndex","verticalAlign","border","NavBar","float","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c013d806.chunk.js","sourcesContent":["import React from 'react'\n\n// component card Event for homepage\nexport default function CardsEvent() {\n  return (\n    <div className=\"card card-chart homeCard\">\n      <div className=\"card-header text-center\">\n        {/* Title */}\n        <h3 className=\"card-title \"><i className=\"tim-icons icon-bell-55 text-primary\"></i>Events in Turku</h3>\n\n        {/* Sub Title */}\n        <h2 className=\"card-category\">Find all events in Turku</h2>\n      </div>\n      <div className=\"card-body\">\n\n        {/* my LOGO of events */}\n        <div className=\"chart-area text-center\">\n          <img src=\"/turku/images/event.png\" alt=\"event\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// component card Drink place for homepage\nexport default function CardsDrinks() {\n  return (\n    <div className=\"card card-chart homeCard\">\n      <div className=\"card-header text-center\">\n\n        {/* Title */}\n        <h3 className=\"card-title \"><i className=\"tim-icons icon-bell-55 text-primary\"></i>Top drinks place</h3>\n\n        {/* Sub Title */}\n        <h2 className=\"card-category\">Approval places for drinking in Finland</h2>\n      </div>\n\n      {/* my LOGO of drinks */}\n      <div className=\"card-body\">\n        <div className=\"chart-area text-center\">\n          <img src=\"/turku/images/drinks.png\" alt=\"drinks\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\n// component card Name for homepage\nexport default function CardsName() {\n  return (\n    <div className=\"card card-chart homeCard\">\n      <div className=\"card-header text-center\">\n\n        {/* Title */}\n        <h3 className=\"card-title \"><i className=\"tim-icons icon-bell-55 text-primary\"></i>Famous name</h3>\n\n        {/* Sub Title */}\n        <h2 className=\"card-category\">Find out if your name or family name popular in Finland </h2>\n      </div>\n\n      {/* my LOGO of name */}\n      <div className=\"card-body\">\n        <div className=\"chart-area text-center\">\n          <img src=\"/turku/images/name.png\" alt=\"famous name\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n","// eslint-disable-next-line\nimport * as React from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport { createContainer } from \"unstated-next\";\nimport axios from 'axios';\n\n// SOURCE opendata\n// const URL_PAGE = `https://api.turku.fi/linkedevents/v1/image/?page=`;\n// source : \"https://api.covid19api.com/\"\n\n\n// THIS IS THE STORE - like redux - but unstated-next : you can store function and attributes, just have to call them\nexport const useStore = () => {\n  const [data, setData] = React.useState<Object[] | void | null | undefined>([]);// data for graph\n  const [dataDiff, setDataDiff] = React.useState<number[] | any[] | undefined>([]);// data diff for graph\n  const [labels, setLabels] = React.useState<Object[] | void | null | undefined>([]); // label for graph covid19\n  const [lastCases, setLastCases] = React.useState<number | any>(0); // label for graph covid19\n  const [eventUrl, setEventUrl] = React.useState<string>(\"https://api.turku.fi/linkedevents/v1/event/?page=1\"); // url for events of Turku\n  const [events, setEvents] = React.useState<any[]>([]); // all events of Turku current day\n  const [nextEvents, setNextEvents] = React.useState<string>(\"\"); // url for next day events\n  const [previousEvents, setPreviousEvents] = React.useState<string>(\"\"); // url for previous day events\n  // header for API request, some API doesn't allow Opera, internet explorer, there is a catch error instead of a crash anyway\n  const headers = new Headers({\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:78.0) Gecko/20100101 Firefox/78.0\"\n  });\n  \n  //  fetchEventsUrl function  : fetch data from url event : the url change according to the page or search\n  //  @params url: string\n  //  @return response : json from the api url\n  //\n  const fetchEventsUrl = async (url: any) => {\n    const response: any = await axios.get(url ? url : eventUrl);\n    setEvents(response.data.data);\n    // method url for next page if exists\n    if (response.data.meta.next)\n    setNextEvents(response.data.meta.next);\n    // method url previous page if exists\n    if (response.data.meta.previous)\n      setPreviousEvents(response.data.meta.previous);\n    return response.data;\n  }\n  //  {/**\n  //   countryDataGraph function  : cleaning data from API covid19 to display the graph of  coronavirus evolution\n  //   data from function getDataCovid19()\n  //   @params data: json\n  //   @params country: string Finland\n  //   @params caseType: string : here newCases confirmed, but can change (confirmed, deaths, recoveres)\n  //   @params dateTo: string dateTime in string for begining of the survey\n  //   @return response : json from the api url\n  // */}\n  function countryDataGraph(data: any, country: string, caseType: string, dateTo: string) {\n    let resultCases: any[] = []\n    let resultDates: any[] = []\n    if (data.length > 0) {\n      // array of dates and cases for graph of covid 19 : it represents X(date) - Y(cases) \n      data.forEach((item: any) => {\n        if ((moment(item.Date).isAfter(dateTo))) {\n          resultCases.push(item.Cases);\n          resultDates.push(moment(item.Date).format('YYYY/MM/DD'));\n        }\n      })\n      // creating a array of covid Value for every day : have to make a substraction with the previous day \n      // because the api only give the amout of new cases per day\n      let resultCasesDiff: any[] = _.map(resultCases, function (e: any, i: any) {\n        return (resultCases[i + 1] - e) < 0 ? 0 : (resultCases[i + 1] - e)\n      });\n      // cleaning the last value cause it doesn't make sense with our substraction (can't do a substraction on the first value with nothing )\n      resultCasesDiff.pop();\n      resultCases.pop();\n      resultDates.pop();\n      // data for the graph rechartjs2\n      setDataDiff(resultCasesDiff);\n      setData(resultCases);\n      setLabels(resultDates);\n      // info for the new cases today : last result of our data array\n      setLastCases(resultCasesDiff[resultCasesDiff.length - 1])\n    }\n  }\n\n//  {/**\n//     getDataCovid function  : get data from API covid19 fro the graph\n//     @params \n//     @return response : json from the api url to send to countryDataGraph() fot treatment\n//   */}  \n  const getDataCovid = async () => {\n    try {\n      const country: string = 'finland'; // you can choose another country \n      const caseType: string = 'confirmed'; // possibles API options request : confirmed, recovered and deaths\n      // you can change the amount of months for covid 19 : i took just 2 months but you can take more or less but the graph will be more or less compact starting from today\n      const dateTo: string = `${moment().subtract(2, 'months').format()}`\n      // you can choose another $country, others $caseType: confirmed, recovered and deaths\n      await fetch(`https://api.covid19api.com/country/${country}/status/${caseType}/live?from=${dateTo}&to=${moment().format('YYYY-MM-DDT00:00:00')}`, {\n        method: 'GET',\n        redirect: 'follow',\n        headers: headers\n      })\n        .then((response: any) => response.json()).then((res) => {\n          // the json only give the amouts of cases per day, need to do a difference\n          countryDataGraph(res, country, caseType, dateTo);// cleaning data for ChartJS\n        }).catch(err => alert(err));\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  return {\n    // attributes available when you call unstated store in a component\n    data,\n    dataDiff,\n    labels,\n    headers,\n    events,\n    nextEvents,\n    previousEvents,\n    lastCases,\n    // methods availables when you call unstated store in a component\n    getDataCovid,\n    fetchEventsUrl,\n    setEventUrl,\n    setNextEvents,\n    setPreviousEvents,\n  };\n}\nexport const StoreContainer = createContainer(useStore)\n","import React from 'react'\nimport { StoreContainer } from '../../Store'; // redux - unstated-next\n\nexport default function CardsCovid() {\n  const unstated = StoreContainer.useContainer();\n\n  // component for home page : covid19 Card\n  return (\n    <div className=\"card card-chart homeCard\">\n      <div className=\"card-header text-center\">\n        {/* TITLE */}\n        <h3 className=\"card-title \"><i className=\"tim-icons icon-bell-55 text-primary\"></i>Covid 19 Stats</h3>\n\n        {/* sub Title extra info */}\n        <h2 className=\"card-category\">Evolution Covid19 in Finland - last info : {unstated.lastCases} new cases</h2>\n      </div>\n\n      {/* my LOGO covid19 */}\n      <div className=\"card-body\">\n        <div className=\"chart-area text-center\">\n          <img src=\"/turku/images/virus.png\" alt=\"virus\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react';\nimport CardsEvent from '../template/cards/CardsEvent';\nimport CardsDrinks from '../template/cards/CardsDrinks';\nimport CardsName from '../template/cards/CardsName';\nimport CardsCovid from '../template/cards/CardsCovid';\nimport { StoreContainer } from '../Store'; // redux like\n\n// Compnent HomePage : display the 4 Cards (in templates/ folder)\nexport default function Home(props: any) {\n  const unstated = StoreContainer.useContainer();\n\n  /**\n   * fetching data (events of turku and Covid19) from Store component\n   */\n  useEffect(() => {\n    unstated.fetchEventsUrl(null);\n    unstated.getDataCovid();\n    // eslint-disable-next-line\n  }, [])\n  return (\n    <div className=\"content\">\n      {/* background photo of Turku */}\n      <div className=\"alert alert-dismissable border border-default text-center\" style={{ backgroundImage: \"url(/turku/images/turku.jpg)\", backgroundPosition: 'center', backgroundSize: '100%', backgroundRepeat: 'no-repeat' }}>\n        \n        {/* note : button to close this image if the user want */}\n        <button className=\"close mb-0\" type=\"button\" data-dismiss=\"alert\">×</button>\n        <p className=\"pt-2 text-capitalize\" style={{ fontSize: '2em', color: 'white', fontWeight: 400, textShadow: \"1px 1px black\" }}>Turku DashBoard : Top OpenData</p>\n      </div>\n\n      {/* cards for home page of the 4 components */}\n      <div className='d-flex row'>\n\n        {/* events */}\n        <div className=\"col-lg-6 col-md-6 col-sm-6\" onClick={() => props.setPage(\"event\")}><CardsEvent /></div>\n        \n        {/* frinks place */}\n        <div className=\"col-lg-6 col-md-6 col-sm-6\" onClick={() => props.setPage(\"place\")}><CardsDrinks /></div>\n        \n        {/* covid 19 */}\n        <div className=\"col-lg-6 col-md-6 col-sm-6\" onClick={() => props.setPage(\"covid\")}><CardsCovid /></div>\n        \n        {/* names popularity */}\n        <div className=\"col-lg-6 col-md-6 col-sm-6\" onClick={() => props.setPage(\"name\")}><CardsName /></div>\n      </div>\n    </div>\n  );\n\n}","import React from 'react';\nimport { Bar } from 'react-chartjs-2';\n\n// CHART Covid19 - 2months daily updated - using Bar from react-chartjs-2\nexport default function LinearChart(props: any) {\n  const ref: any = React.useRef(null); // reference to get the width size\n  const isWindowClient = typeof window === \"object\"; // to get window size\n\n  const [windowSize, setWindowSize] = React.useState(window.innerWidth) // here under 500px, display turn logo);\n\n  React.useEffect(() => {\n    //a handler which will be called on change of the screen resize\n    function setSize() {\n      setWindowSize(window.innerWidth);\n    }\n    if (isWindowClient) {\n      //register the window resize listener\n      window.addEventListener(\"resize\", setSize);\n      //unregister the listener on destroy of the hook\n      return () => window.removeEventListener(\"resize\", setSize);\n    }\n  }, [isWindowClient, setWindowSize]);\n\n  React.useEffect(() => {\n    // get the size of windows for responsive display on loading page\n    setWindowSize(ref.current ? ref.current.offsetWidth : 0);\n    // eslint-disable-next-line\n  }, []);\n\n  // configuration of the options of the graph(color, label etc...)\n  const data = {\n    labels: props.labels,\n    datasets: [\n      {\n        // title of the graph\n        label: `COVID-19 confirmed cases - last 2 months`,\n        // data came from the Store component, it represent the daily update Covid19 situation graph\n        data: props.data,\n        // color of the bar\n        backgroundColor: \"lightgreen\",\n        // other colors\n        color: \"rgba(009,009,250,0.75)\",\n        hoverBackgroundColor: \"rgb(255,255,153,1)\",\n      }\n    ]\n  }\n  // options to change the infos of the graph\n  const options = {\n    legend: {\n      display: true,\n      fontColor: 'white'\n    },\n    title: {\n      display: true,\n      text: `Finland - Covid19 - last 2 months`,\n      fontColor: 'white',\n    },\n    scales: {\n      // option for axis Y - already responsive but can't fit under 500px. Solution => have to turn the phone\n      // NOTE !!! if you test on a normal browser, refreshe the page when you rotate the phone screen ;-)\n      yAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 9,\n          color: \"rgba(2, 2, 2, 0.1)\",\n          // display axe only if width < 500px\n          display: windowSize < 500 ? false : true,\n        },\n        scaleLabel: {\n          // display axe only if width >= 500px\n          display: windowSize >= 500 ? false : true,\n          color: \"rgba(2, 2, 2, 0.1)\",\n          fontColor: \"white\",\n          labelString: windowSize >= 500 ? '' : 'Rotate ⤵️'\n        }\n      }],\n      // option for axis x\n      xAxes: [{\n        ticks: {\n          fontColor: \"white\",\n          fontSize: 14,\n        }\n      }],\n      responsive: true,\n    }\n  }\n  return (\n    <div style={{ backgroundColor: \"#555555\" }} ref={ref}> {/* ref for the widht size*/}\n      \n      {/* display a logo to rotate phone when the screen is to small */}\n      {windowSize < 500 && (<div style={{ textAlign: \"center\", color: \"white\" }}><img src=\"/turku/images/Use_Landscape_Mode.jpg\" height=\"40\" alt=\"use Landscape Mode\" /><span> Turn you device </span></div>)}\n      {/* component Graph bar from the library*/}\n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n","import React from 'react'\nimport { StoreContainer } from '../Store'; // redux - unstated-next\nimport BarCharts from '../template/BarCharts';\n\n// Component Covid19\nexport default function Covid() {\n  const unstated = StoreContainer.useContainer();\n  const [loading, setLoading] = React.useState<boolean>(false)\n\n  /**\n   * Getting data of covid 19 from the Store component\n   */\n  React.useEffect(() => {\n    setLoading(true);\n    if (!unstated.dataDiff || unstated.dataDiff.length === 0)\n      unstated.getDataCovid();\n    setLoading(false);\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <div className=\"content\">\n      <div className=\"card \">\n        <div className=\"card-header\">\n\n          {/* TITLE */}\n          <h1 className=\" card-title text-center pt-1\">Evolution Coronavirus in Finland</h1>\n          <h2 className=\"text-center pt-2\">last info : {unstated.lastCases} new cases </h2>\n\n          <div className=\"alert alert-dismissable border border-default text-center\">\n            {/* note : button to close this text if the user want */}\n            <button className=\"close mb-0\" type=\"button\" data-dismiss=\"alert\">×</button>\n            <p style={{ textAlign: \"center\" }}>you can click on one bar of the graph to display more details</p>\n          </div>\n        </div>\n        <div className=\"card-body\"></div>\n\n        {/* Loading gif while waiting data */}\n        {loading && (<div className=\"col-12 text-center\"><img height='50' width='50' src='turku/images/loading.gif' alt='LOADING' /></div>)}\n\n        {/* component Chart of covid 19 */}\n        <BarCharts data={unstated.dataDiff} labels={unstated.labels} />\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { readRemoteFile } from 'react-papaparse'\n\n// Best Alcohol Places in Finland 🍻\nexport default function TableCsvPlaceAlcohol() {\n  const [header, setHeader] = useState<any>([]); // header of the table\n  const [rows, setRows] = useState<any>([]); // core of the table\n  const [query, setQuery] = useState<string>(\"\") // for the search bar\n  const [title, setTitle] = useState<string>(\"Places\"); // title\n  const [order, setOrder] = useState<number>(1) // to order the table\n  const [loading, setLoading] = useState<boolean>(true) // display loading if true\n\n\n  // {/**\n  //   filter a key in the array, return true if find it in any row of array then return tue object array filtered\n  // */}\n  function filterData() {\n    return !query\n      ? rows :\n      rows.filter((obj: any) => {\n        let flag: Boolean = false;\n        Object.values(obj).forEach((val: any) => {\n          // filter the search of the value request\n          if (String(val ? val.toLowerCase() : val).indexOf(query.toLowerCase()) > -1) {\n            flag = true;\n            return null;\n          }\n        });\n        // if it find the string research, return the table including the string\n        if (flag) return obj;\n        // normal table without filter return\n        return null;\n      });\n  }\n\n  // {/**\n  //   sorting function : sort a column giving the key name\n  // */}\n  const sorting = (key: string) => {\n    setOrder(order * -1);\n    // order : sorting +/- alphabeticaly\n    setRows(rows.sort((a: any, b: any) =>\n      (order === 1 ? a[key] > b[key] : a[key] < b[key]) ? 1 : -1\n    ));\n  }\n\n  // {/**\n  //   getNamesData function : to set header of the table and the others rows for better presentation\n  // */}\n  const getNamesData = (name: any) => {\n    // reading the fils.csv from the public folder;\n    readRemoteFile(name, {\n      complete: (results: any) => {\n        if (results) {\n          // header of the table, it is display in bold\n          setHeader(results.data.shift());\n          // rest of the array\n          setRows(results.data);\n        }\n      }\n    })\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    // get the table\n    getNamesData(\"/turku/images/alkoholilupa_toimipaikkatiedot_34.csv\");\n    // title of the table\n    setTitle(\"Places\")\n  }, [])\n\n  useEffect(() => {\n    if (rows && rows.length > 0)\n      // cancel loading.gif if the data is load - complete\n      setLoading(false);\n  }, [rows])\n\n  return (\n    <div className=\"content\">\n      <div className=\"card \">\n\n        {/*  TITLE */}\n        <div className=\"card-header\">\n          <h1 className=\" card-title text-center pt-1\">Approval alcohol consumption : {title}</h1>\n        </div>\n\n        {/*  SEARCH  - filter - */}\n        <div className=\"input-group-prepend pb-0 pl-2 pr-2\">\n          <input type=\"text\" className=\"form-control border search\" placeholder=\"Search a place...\" value={query} onChange={(e) => setQuery(e.target.value)} aria-label=\"search place\" aria-describedby=\"alcohol\" />\n        </div>\n\n        {/*  TABLE  - can sort and filter */}\n        <div className=\"card-body\">\n\n          {/* loading */}\n          {loading && (<div className=\"col-12 text-center full-page-loader\"><img height='50' width='50' src='turku/images/logo.png' alt='LOADING' /><h2>LOADING...</h2></div>)}\n          <div className=\"table-responsive\">\n            <table className=\"table tablesorter \" id=\"\">\n              <thead className=\" text-primary\">\n                <tr>\n                  {/* display the header of table if it exists */}\n                  {header && (header.map((name: string, ii: number) => (\n                    <th key={ii} onClick={() => sorting(name)} >{name}&#8597;</th>)\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                {/* display the table if it exists and filter : update according to the search string */}\n                {filterData() &&\n                  (filterData().map((numList: any, i: number) => (\n                    <tr key={i} >\n                      {\n                        numList.map((num: any, j: number) =>\n                          <td key={j}>{num}</td>)\n                      }\n                    </tr>)\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { readRemoteFile } from 'react-papaparse'\n\n// Component of Famous names\nexport default function TableCsvName() {\n  const [header, setHeader] = useState<any>([]); // header of the table\n  const [rows, setRows] = useState<any>([]); // core of the table\n  const [query, setQuery] = useState<string>(\"\"); // for the search bar\n  const [title, setTitle] = useState<string>(\"first names\"); // title\n  const [order, setOrder] = useState<number>(1); // to order the table\n  const [loading, setLoading] = useState<boolean>(true); // display loading if true\n\n\n  // {/**\n  //   filter a key in the array, return true if find it in any row of array then return tue object array filtered\n  // */}\n  function filterData() {\n    return !query\n      ? rows :\n      rows.filter((obj: any) => {\n        let flag: Boolean = false;\n        Object.values(obj).forEach((val: any) => {\n          // filter the search of the value request\n          if (String(val ? val.toLowerCase() : val).indexOf(query.toLowerCase()) > -1) {\n            flag = true;\n            return null;\n          }\n        });\n        // if it find the string research, return the table including the string\n        if (flag) return obj;\n        // normal table without filter return\n        return null;\n      });\n  }\n\n  // {/**\n  //   function : sort a column giving the key name\n  // */}\n  const sorting = (key: string) => {\n    setOrder(order * -1);\n    // order : sorting +/- alphabeticaly\n    setRows(rows.sort((a: any, b: any) =>\n      (order === 1 ? a[key] > b[key] : a[key] < b[key]) ? 1 : -1\n    ));\n  }\n\n  // {/**\n  //   getNamesData function : to set header of the table and the others rows for better presentation\n  // */}\n  const getNamesData = (name: any) => {\n    // set Loading;\n    setLoading(true);\n    // reading the fils.csv from the public folder;\n    readRemoteFile(name, {\n      complete: (results: any) => {\n        if (results) {\n          // header of the table, it is display in bold\n          setHeader(results.data.shift());\n          // rest of the array\n          setRows(results.data);\n        }\n      }\n    })\n    // cancel loading.gif if the data is load - complete\n    setLoading(false);\n  }\n\n  // set data on loding page\n  useEffect(() => {\n    // get the table\n    getNamesData('turku/images/first_name.csv');\n    // title of the table\n    setTitle(\"First names\")\n  }, [])\n\n  // stop the loading after all data get\n  useEffect(() => {\n    if (rows && rows.length > 0)\n      // cancel loading.gif if the data is load - complete\n      setLoading(false);\n  }, [rows])\n\n\n  return (\n    <div className=\"content\">\n      <div className=\"card\">\n\n        {/*  TITLE */}\n        <div className=\"card-header\">\n          <h1 className=\" card-title text-center pt-1\">Popular names : {title} </h1>\n        </div>\n\n        {/*  BUTTON  - switch graphs */}\n        <div className=\"d-flex mt-2 mb-2 justify-content-center\">\n          {/* You can change here between different graphs, it will change the url selected */}\n          <button className=\"badge badge-pill badge-secondary mr-1 ml-1\" onClick={() => { getNamesData(\"/turku/images/first_name.csv\"); setLoading(true); setTitle(\"First names\") }} >name</button>\n          <button className=\"badge badge-pill badge-secondary mr-1\" onClick={() => { getNamesData(\"/turku/images/year_name.csv\"); setLoading(true); setTitle(\"Names by Years\") }}>year</button>\n          <button className=\"badge badge-pill badge-secondary mr-1\" onClick={() => { getNamesData(\"/turku/images/family_name.csv\"); setLoading(true); setTitle(\"Family names\") }}>family</button>\n          <button className=\"badge badge-pill badge-secondary mr-1\" onClick={() => { getNamesData(\"/turku/images/location_name.csv\"); setLoading(true); setTitle(\"Names by location\") }}>location</button>\n        </div>\n\n        {/*  SEARCH - filter - */}\n        <div className=\"input-group-prepend pb-0 pl-2 pr-2\">\n          <input type=\"text\" className=\"form-control border search\" placeholder=\"Search ...\" value={query} onChange={(e) => setQuery(e.target.value)} aria-label=\"search place\" aria-describedby=\"alcohol\" />\n        </div>\n        {loading && (<div className=\"col-12 text-center full-page-loader\"><img height='50' width='50' src='/turku/images/logo.png' alt='LOADING' /><h2>LOADING...</h2></div>)}\n\n        {/*  TABLE  - can sort and filter */}\n        <div className=\"card-body\">\n          <div className=\"table-responsive\">\n            <table className=\"table tablesorter \" id=\"\">\n              <thead className=\" text-primary\">\n                <tr>\n\n                  {/* display the header of table if it exists */}\n                  {header && (header.map((name: string, ii: number) => (\n                    <th key={ii} onClick={() => sorting(name)} >{name}&#8597;</th>)\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n\n                {/* display the table if it exists and filter : update according to the search string */}\n                {filterData() &&\n                  (filterData().map((numList: any, i: number) => (\n                    <tr key={i} >\n                      {numList.map((num: any, j: number) =>\n                        <td key={j}>{num}</td>)\n                      }\n                    </tr>)\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div >\n    </div >\n  )\n}\n","import axios from 'axios';\n\n/**\n * Fetchong data from API Turku : \n * events of data event \n * - be Carefull about images : https or http problem from the API\n * - date are also not exact from the API\n */\nconst URL: string = 'https://api.turku.fi/linkedevents/v1/event/?page=1';\n// const URL_PAGE = `https://api.turku.fi/linkedevents/v1/image/?page=`; // Just model of base url\nconst FetchEventsTurku = async (url: any) => {\n  try {\n    // get url of api events from url parameter, by default, it is URL value\n    const response: any = await axios.get(url ? url : URL);\n    return response;\n  } catch (err) {\n    console.error(err.message);\n  }\n}\nexport default FetchEventsTurku;","import React, { useEffect, useState } from 'react';\nimport FetchEventsTurku from '../api/FetchEventsTurku';\nimport { StoreContainer } from '../Store';\n\n\n// Component list of Event in Turku\nexport default function ListEvents() {\n  const unstated = StoreContainer.useContainer();\n  const [allEvents, setAllEvents] = useState<any>(unstated.events) // all events\n  const [query, setQuery] = useState<string>(\"\") // search variable\n  const [url, setUrl] = useState<string>(\"https://api.turku.fi/linkedevents/v1/event/?page=1\") // url for api\n  const [page, setPage] = useState<string>(\"\") // page of research\n  const [loading, setLoading] = useState<boolean>(true) // loading variable\n\n  // {/**\n  // getAllEvents function : fetch the url of event : url change according to the research or page\n  // regex to fing the page and display the good page\n  // @params url: string \n  // @return - : set allEvents in the hook state\n  // */}\n  const getAllEvents = async (url: any) => {\n    setLoading(true)\n    const res: any = await FetchEventsTurku(url);\n    if (res) {\n      if (res.data.meta.next)\n        // setting next page url if exists from API\n        unstated.setNextEvents(res.data.meta.next);\n      if (res.data.meta.previous)\n        // setting previous page url if exists from API\n        unstated.setPreviousEvents(res.data.meta.previous);\n      setAllEvents(res.data.data);\n    }\n    // setting current page url if exists from API\n    setUrl(url);\n    let page: string; // set page number according url query\n    // regulare expression to get the current page number\n    query ? page = url.match(/=(.*)&q/) : page = url.match(/=(.*)/);\n    if (page != null)\n      page = (page[1]);\n    // set by default page to number 1 if dosent exist for the front\n    setPage(page ? page : \"1\");\n    // cancel loading after getting all events\n    setLoading(false)\n  }\n\n  // {/**\n  // search function : use getAllEvents() pressing on enter with the query\n  // @params e: any , query\n  // */}\n  const search = async (e: any) => {\n    // Search  :pressing on Enter keyboard\n    if (e.key === \"Enter\") {\n      if (query.trim()) {\n        // search withc the string query\n        getAllEvents('https://api.turku.fi/linkedevents/v1/search/?type=event&q=' + query)\n      } else {\n        getAllEvents('https://api.turku.fi/linkedevents/v1/event/?page=1')\n        setQuery('');\n      }\n    }\n  }\n\n\n  // {/**\n  // charging data when loading the page\n  // */}\n  useEffect(() => {\n    setLoading(true);\n    if (unstated.events.length === 0)\n      getAllEvents(url);\n    // disable loading gif after loading the events\n    setLoading(false);\n    // eslint-disable-next-line\n  }, [])\n\n  // have to parse problematic html data from Turku event\n  const parseHtml = (htmlString: any) => {\n    const regex1: any = /<p>/g;\n    const regex2: any = /<\\/p>/g;\n    const regex3: any = /<br>/g;\n    const regex4: any = /<\\/br>/g;\n    const regex5: any = /<br \\/>/g;\n    const regex6: any = /<li>/g;\n    const regex7: any = /<\\/li>/g;\n    const regex8: any = /<strong>/g;\n    const regex9: any = /<\\/strong>/g;\n    const regex10: any = /<a>/g;\n    const regex11: any = /<\\/a>/g;\n    const toReplace: string = '';\n    // the data receive from the API event is strangely in a string html\n    if (htmlString) {\n      // we get rid of every : <p>, <li>, <br/> ,<a> and <strong>\n      let res: any = htmlString\n        .replace(regex1, toReplace)\n        .replace(regex2, toReplace)\n        .replace(regex3, toReplace)\n        .replace(regex4, toReplace)\n        .replace(regex5, toReplace)\n        .replace(regex6, toReplace)\n        .replace(regex7, toReplace)\n        .replace(regex8, toReplace)\n        .replace(regex9, toReplace)\n        .replace(regex10, toReplace)\n        .replace(regex11, toReplace);\n      return (res);\n    }\n  }\n\n  useEffect(() => {\n    //just cancelling loag if the event is really loadd and > 0\n    if (allEvents && allEvents.length > 0)\n      setLoading(false);\n  }, [allEvents])\n\n\n  return (\n    <div className=\"content\">\n      <div className=\"card \">\n        {/* TITLE */}\n        <div className=\"card-header\">\n          <h1 className=\" card-title text-center pt-1\">Events in TURKU</h1>\n        </div>\n\n        {/* BUTTONS and SEARCH BAR */}\n        <div className=\"text-center\">\n\n          {/* previous page button if exists */}\n          <button type=\"button\" className=\"btn btn-default btn-sm mr-1\" onClick={() => getAllEvents(unstated.previousEvents)}>Previous</button>\n\n          {/* number of the current page */}\n          <span>Page {page}</span>\n\n          {/* button of next page if exists */}\n          <button type=\"button\" className=\"btn btn-default btn-sm ml-1\" onClick={() => getAllEvents(unstated.nextEvents)}>Next</button>\n        </div>\n\n        {/* search input button */}\n        <div className=\"input-group-prepend mb-3 pl-2 pr-2\">\n          <input type=\"text\" className=\"form-control border search\" placeholder=\"Search an event in Turku...\" value={query}\n            onChange={(e) => setQuery(e.target.value)} aria-label=\"search events\" aria-describedby=\"events\" onKeyPress={search} />\n        </div>\n\n      </div>\n\n      {/* LIST of Events */}\n      <div className=\"d-flex row\">\n\n        {/* loading.gif while waiting data */}\n        {loading && (<div className=\"col-12 text-center full-page-loader\"><img height='50' width='50' src='turku/images/logo.png' alt='LOADING' /><h3>LOADING...</h3></div>)}\n\n        {/* display event */}\n        {allEvents ?\n\n          // displaying a table of event from the data array received\n          allEvents.map((event: any, i: number) =>\n            (<div key={i} className=\"col-lg-4 col-md-6 col-sm-6 \">\n              <div className=\"card clearfix\" >\n\n                {/* display the image if exists otherwise the logo */}\n                {event.images && (event.images.length > 0 ?\n                  <img className=\"card-img-top img-fluid \" src={event.images[0].url} alt=\"event\" style={{ width: \"100%\", height: \"15vw\", objectFit: 'cover' }} />\n                  // NOTE : there is a bug mistake in the event api cause it give https or http on url images which \n                  : <img className=\"card-img-top img-fluid \" src='turku/images/logo.png' alt=\"nothing\" style={{ height: \"15vw\", objectFit: 'cover' }} />\n                )}\n\n                {/* displayl the date */}\n                <div className=\"card-block\">\n                  <div className=\"card-body\">\n\n                    {/* title of the event */}\n                    <h3 className=\"card-title\">{event.name ? event.name.fi : 'no name'}</h3>\n\n                    {/* end of the event */}\n                    <p className=\"card-title\">end at : {event.end_time ? event.end_time.substr(0, 10) : 'no date'}</p>\n\n                    {/* displqy the description */}\n                    {event.description &&\n                      (<>\n                        {/* button to collapse or not the description */}\n                        <button type=\"button\" className=\"btn btn-default btn-sm\" data-toggle=\"collapse\" data-target={`#detail_event${i}`} >{event.description.fi ? \"Details\" : \"No details\"}</button>\n                        <div id={`detail_event${i}`} className=\"collapse card-text\" style={{ color: \"white\" }}>\n                          {event.description ? parseHtml(event.description.fi ? event.description.fi : '') : ''}\n                        </div>\n                      </>)}\n                  </div>\n                </div>\n              </div>\n            </div >)\n          )\n          :\n          (<div>\n            {/* display loading while fetching data */}\n            <h2>Loading</h2>\n            <img src=\"images/logo.png\" alt=\"loading\" />\n          </div>)}\n      </div>\n    </div >\n  )\n}","import React from 'react'\n\n// SIDE BAR : Icon and link to to change pages (using props.setPage from App.tsx)\nexport default function SideBar(props: any) {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-wrapper\">\n\n        {/* click to redirect to homepage*/}\n        <div className=\"logo homeCard\">\n          <div onClick={() => props.setPage(\"turku\")}>\n            {/* LOGO */}\n            <img src=\"/turku/logo.png\" alt=\"meow\" />\n          </div>\n        </div>\n        <ul className=\"nav\" style={{ fontSize: \"2em\" }}>\n\n          {/* Place button sidebar */}\n          <li className=\"tim-icons icon-pin homeCard \" onClick={() => props.setPage(\"place\")}>\n            <button className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" style={{ all: \"unset\", color: 'white', textDecoration: 'inherit', paddingLeft: '15px', fontSize: \"1em\" }} >Places</button>\n          </li>\n\n          {/* Event button sidebar */}\n          <li className=\"tim-icons icon-pin homeCard\" onClick={() => props.setPage(\"event\")}>\n            <button className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" style={{ all: \"unset\", color: 'white', textDecoration: 'inherit', paddingLeft: '15px', fontSize: \"1em\" }} >Events</button>\n          </li>\n\n          {/* covid19 button sidebar */}\n          <li className=\"tim-icons icon-pin homeCard \" onClick={() => props.setPage(\"covid\")}>\n            <button className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" style={{ all: \"unset\", color: 'white', textDecoration: 'inherit', paddingLeft: '15px', fontSize: \"1em\" }} >Covid19</button>\n          </li>\n\n          {/* Name button sidebar */}\n          <li className=\"tim-icons icon-pin homeCard\" onClick={() => props.setPage(\"name\")}>\n            <button className=\"nav-link py-3 px-0 px-lg-3 rounded js-scroll-trigger\" style={{ all: \"unset\", color: 'white', textDecoration: 'inherit', paddingLeft: '15px', fontSize: \"1em\" }} >Popular</button>\n          </li>\n        </ul>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\" style={{ bottom: 0, position: 'fixed', right: 0 }}>\n      <div className=\"container-fluid\">\n\n        {/* just my CV if you want to hire me */}\n        <span className=\"nav-item\"><a href=\"https://github.com/rim31\" className=\"nav-link\">rim31.github.io</a></span>\n        <span className=\"copyright\">© 2020 made by\n            <a href=\"https://linkedin.com/in/rim31\"> oseng </a> 😀\n          </span>\n      </div>\n    </footer>\n  )\n}\n","import React, { CSSProperties } from 'react'\n\nexport interface StylesDictionary {\n  [Key: string]: CSSProperties;\n}\n\nconst styles: StylesDictionary = {\n  myHeader: {\n    display: 'flex',\n    justifyContent: 'center',\n    height: \"4em\",\n    width: '100%',\n    backgroundColor: '#525f7f',\n    top: 0,\n    zIndex: 10,\n    position: 'fixed',\n    verticalAlign: 'middle',\n    border: 'solid 1px'\n  }\n}\n\n// NAVBAR  : menu and menu berger to navigate on responsive mode\nexport default function NavBar(props: any) {\n\n  return (\n    <div className=\"navbar navbar-expand-lg navbar-absolute\" style={styles.myHeader}>\n      {/* logo and title - you can go to hte home page clicking on it*/}\n      <div className=\"d-flex inline\" onClick={() => props.setPage(\"turku\")}><img style={{ zIndex: 10 }} src=\"/turku/images/meow.png\" height=\"40\" alt=\"meow logo\" />\n        <img style={{ zIndex: 10 }} src=\"/turku/apple-icon-114x114.png\" height=\"36\" alt=\"meow logo\" />\n      </div>\n\n      <div id=\"home\" className=\"container-fluid\">\n        <div className=\"navbar-wrapper align-middle\" style={{ position: 'fixed', float: 'left', top: 0, }}>\n\n          <div className=\"navbar-toggle d-inline\">\n            {/* menue burger for mobile */}\n            <span className=\"navbar-toggler navbar-absolute\" data-toggle=\"collapse\" data-target=\"#navigation\">\n              <span className=\"navbar-toggler-bar bar1\"> </span>\n              <span className=\"navbar-toggler-bar bar2\"> </span>\n              <span className=\"navbar-toggler-bar bar3\"> </span>\n            </span>\n          </div>\n        </div>\n\n        {/* shortcut */}\n        <div className=\"collapse navbar-collapse\" id=\"navigation\" style={{ backgroundColor: \"black\" }} >\n          <ul className=\"navbar-nav ml-auto\" data-toggle=\"collapse\" data-target=\"#navigation\">\n\n            {/* redirect to homepage */}\n            <li className=\"dropdown nav-item\" ><button className=\"homeCard d-lg-none\" style={{ all: \"unset\" }} onClick={() => props.setPage(\"turku\")}>Home <img className=\"\" src=\"/turku/images/meow.png\" height=\"30\" alt=\"meow logo\" /></button></li>\n            {/* redirect to event */}\n            <li className=\"dropdown nav-item\" ><button className=\"homeCard d-lg-none\" style={{ all: \"unset\" }} onClick={() => props.setPage(\"event\")} >Events</button></li>\n            {/* redirect to places */}\n            <li className=\"dropdown nav-item\" ><button className=\"homeCard d-lg-none\" style={{ all: \"unset\" }} onClick={() => props.setPage(\"place\")} >Places</button></li>\n            {/* redirect to covid 19 */}\n            <li className=\"dropdown nav-item\" ><button className=\"homeCard d-lg-none\" style={{ all: \"unset\" }} onClick={() => props.setPage(\"covid\")} >Covid19</button></li>\n            {/* redirect to name poåpularity */}\n            <li className=\"dropdown nav-item\" ><button className=\"homeCard d-lg-none\" style={{ all: \"unset\" }} onClick={() => props.setPage(\"name\")} >Popularity</button></li>\n          </ul>\n        </div>\n      </div>\n    </div >\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport Home from \"./components/screens/Home\";\nimport Covid from \"./components/screens/Covid\";\nimport TableCsvPlaceAlcohol from \"./components/template/TableCsvPlaceAlcohol\";\nimport TableCsvName from \"./components/template/TableCsvName\";\nimport ListEvents from \"./components/template/ListEvents\";\nimport SideBar from './components/template/SideBar';\nimport Footer from './components/template/Footer';\nimport NavBar from './components/template/NavBar';\nimport { StoreContainer } from \"./components/Store\"// Store : redux unstated-next\n\nfunction App() {\n  const [page, setPage] = React.useState<string>(\"turku\") // variable to dispqly the main content of the page\n  return (\n    <StoreContainer.Provider>\n      <div>\n        {/* header, can change page when mobile with menu burger with setPage*/}\n        <NavBar setPage={setPage} /> \n\n        {/* left bar, can change page when desktop  with setPage*/}\n        <SideBar setPage={setPage} />\n\n        {/* display one this component according to the setPage choosen */}\n        <div className=\"main-panel mt-30\">\n          {page === 'event' && (<ListEvents />)}\n          {page === 'name' && (<TableCsvName />)}\n          {page === 'place' && (<TableCsvPlaceAlcohol />)}\n          {page === 'covid' && (<Covid />)}\n          {page === 'turku' && (<Home setPage={setPage} />)}\n        </div>\n\n        {/* footer for signature to hire me */}\n        <Footer />\n      </div >\n    </StoreContainer.Provider>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// serviceWorker.unregister();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}